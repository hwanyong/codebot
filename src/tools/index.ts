/**
 * 도구 모듈 내보내기
 * Tool Module Exports
 *
 * 모든 도구를 등록하고 내보내는 중앙 모듈입니다.
 * Central module for registering and exporting all tools.
 *
 * Generated by Copilot
 */

// 도구 레지스트리
import { ToolRegistry, getAllTools } from './toolRegistry.js';

// 파일 시스템 도구
import { ReadFileTool } from './fileSystem/readFile.js';
import { WriteFileTool } from './fileSystem/writeFile.js';
import { ListFilesTool } from './fileSystem/listFiles.js';

// 터미널 도구
import { RunCommandTool } from './terminal/runCommand.js';

// 컨텍스트 도구
import { GetContextTool } from './context/getContext.js';
import { AddToContextTool } from './context/addToContext.js';

// 번역 도구
import { TranslateTool } from './translate/translate.js';

// 기본 도구 클래스
import { BaseTool } from './base.js';

// 타입 어댑터: BaseTool을 Tool 인터페이스로 변환
function adaptBaseTool(baseTool: BaseTool): any {
  return {
    name: baseTool.name,
    description: baseTool.description,
    // schema 속성을 parameterSchema로 매핑
    schema: baseTool.parameterSchema || { parse: (input: any) => input },
    // execute 메서드 전달
    execute: (input: any) => baseTool.execute(input)
  };
}

/**
 * 도구 레지스트리에 모든 도구를 등록합니다.
 * @param registry 도구 레지스트리
 */
export function registerTools(registry: ToolRegistry): void {
  // 모든 도구 가져오기
  const tools = getAllTools();

  // 각 도구를 Tool 인터페이스로 변환하여 등록
  for (const tool of tools) {
    registry.registerTool(adaptBaseTool(tool));
  }
}

// 도구 내보내기
export { ToolRegistry } from './toolRegistry.js';
export { BaseTool } from './base.js';
export { ReadFileTool } from './fileSystem/readFile.js';
export { WriteFileTool } from './fileSystem/writeFile.js';
export { ListFilesTool } from './fileSystem/listFiles.js';
export { RunCommandTool } from './terminal/runCommand.js';
export { GetContextTool } from './context/getContext.js';
export { AddToContextTool } from './context/addToContext.js';
export { TranslateTool } from './translate/translate.js';
export { getAllTools } from './toolRegistry.js';