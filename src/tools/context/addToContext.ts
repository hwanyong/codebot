/**
 * 컨텍스트 추가 도구
 * Add To Context Tool
 *
 * 컨텍스트에 데이터를 추가합니다.
 * Adds data to the context.
 *
 * Generated by Copilot
 */

import { BaseTool } from '../base.js';
import { z } from 'zod';
import { GetContextTool } from './getContext.js';

/**
 * 컨텍스트 추가 도구
 */
export class AddToContextTool extends BaseTool<{ key: string; value: any }, boolean> {
  constructor() {
    super(
      'AddToContext',
      '컨텍스트에 데이터를 추가합니다.',
      'context',
      z.object({
        key: z.string().describe('컨텍스트에 저장할 키'),
        value: z.any().describe('저장할 값')
      })
    );
  }

  /**
   * 컨텍스트에 데이터를 추가합니다.
   * @param params.key 데이터를 저장할 키
   * @param params.value 저장할 값
   * @returns 성공 여부
   */
  protected async _execute(params: { key: string; value: any }): Promise<boolean> {
    try {
      const { key, value } = params;

      // 키 유효성 검사
      if (!key || typeof key !== 'string') {
        throw new Error('유효하지 않은 키: 문자열이어야 합니다.');
      }

      // 내부 정적 메서드를 통해 컨텍스트에 값 설정
      GetContextTool.setContextValue(key, value);

      return true;
    } catch (error) {
      console.error('컨텍스트 추가 오류:', error);
      throw error;
    }
  }
}